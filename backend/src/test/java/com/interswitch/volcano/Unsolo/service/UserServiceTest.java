package com.interswitch.volcano.Unsolo.service;import com.interswitch.volcano.Unsolo.controller.UserController;import com.interswitch.volcano.Unsolo.dtos.SignUpRequestDto;import com.interswitch.volcano.Unsolo.dtos.SignUpResponseDto;import com.interswitch.volcano.Unsolo.enums.Gender;import com.interswitch.volcano.Unsolo.model.User;import com.interswitch.volcano.Unsolo.repository.UserRepository;import com.interswitch.volcano.Unsolo.services.ServiceImpl.UserServiceImpl;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.mockito.InjectMocks;import org.mockito.Mock;import org.mockito.MockitoAnnotations;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import java.io.IOException;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.mockito.ArgumentMatchers.anyString;import static org.mockito.ArgumentMatchers.isA;import static org.mockito.Mockito.when;public class UserServiceTest {    @Mock    UserRepository userRepository;    @InjectMocks    UserServiceImpl userService;    private final UserController userController = new UserController(userService);    private SignUpRequestDto signUpRequestDto;    @BeforeEach    void setUp() {        MockitoAnnotations.openMocks(this);        signUpRequestDto = new SignUpRequestDto();    }    @Test    void signUp() throws IOException {        signUpRequestDto.setEmail("email@.com");        signUpRequestDto.setGender(Gender.MALE);        signUpRequestDto.setUserName("johndoe");        signUpRequestDto.setPhoneNumber("12345678908");        signUpRequestDto.setPassword("ilikeyou123");        signUpRequestDto.setDateOfBirth("hdkda");        signUpRequestDto.setFirstName("ahsas");        signUpRequestDto.setLastName("akaha");        when(userRepository.existsByEmail(anyString())).thenReturn(false);        when(userRepository.save(isA(User.class))).thenReturn(new User());        SignUpResponseDto signUpResponseDto = userService.registerUser(signUpRequestDto);        ResponseEntity<String> responseEntity =  userController.signUp(signUpRequestDto);        assertEquals(HttpStatus.CREATED, responseEntity.getStatusCode());    }}