package com.interswitch.volcano.Unsolo.controller;import com.interswitch.volcano.Unsolo.dtos.SignUpRequestDto;import com.interswitch.volcano.Unsolo.enums.Gender;import com.interswitch.volcano.Unsolo.model.User;import com.interswitch.volcano.Unsolo.repository.UserRepository;import com.interswitch.volcano.Unsolo.services.ServiceImpl.UserServiceImpl;import com.interswitch.volcano.Unsolo.services.UserService;import org.junit.jupiter.api.Test;import org.modelmapper.ModelMapper;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import static org.junit.jupiter.api.Assertions.*;import static org.mockito.ArgumentMatchers.anyString;import static org.mockito.ArgumentMatchers.isA;import static org.mockito.Mockito.mock;import static org.mockito.Mockito.when;class UserControllerTest {    private final UserRepository userRepository = mock(UserRepository.class);    private final UserService userService = new UserServiceImpl(userRepository);    private final UserController userController = new UserController(userService);    @Test    void signUp() {        SignUpRequestDto signUpRequestDto = new SignUpRequestDto();        signUpRequestDto.setEmail("email@.com");        signUpRequestDto.setGender(Gender.MALE);        signUpRequestDto.setUserName("johndoe");        signUpRequestDto.setPassword("ilikeyou");        signUpRequestDto.setDateOfBirth("hdkda");        signUpRequestDto.setFirstName("ahsas");        signUpRequestDto.setLastName("akaha");        when(userRepository.existsByEmail(anyString())).thenReturn(false);        when(userRepository.save(isA(User.class))).thenReturn(new User());     ResponseEntity<String> responseEntity =  userController.signUp(signUpRequestDto);     assertEquals(HttpStatus.CREATED, responseEntity.getStatusCode());    }}